// Colors.
$primary-color:   #3d4676;
$seconday-color:  #e85b6f;
$header-color:    #212A44;
$text-color:      #7F7B91;

// Fonts.
@import url("https://use.typekit.net/hlm3dxp.css");
$font-family-1: "effra", "Helvetica Neue", Arial, sans-serif;
$font-family-2: "quasimoda", "Helvetica Neue", Arial, sans-serif;

/// Tint function.
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// Shade function.
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

// Calculate material design elevation box-shadows
@mixin shadow($dp: 1) {
  @if $dp == 0 { box-shadow: none; }
  @else {
      $blur: if($dp == 1, 3, $dp * 2);
      $amba: ($dp + 11) / 100;
      $diry: $dp - floor($dp / 4);
      $dirb: floor(($dp + 5) / 2);
      $dira: (24 - (round($dp / 10))) / 100;
      box-shadow: 0px #{$dp + 'px'} #{$blur + 'px'} rgba(0, 0, 0, $amba), 0px #{$diry + 'px'} #{$dirb + 'px'} rgba(0, 0, 0, $dira);
  }
}

// Cubic-bezier easing variables.
// Standard
$ease:     cubic-bezier(0.4, 0.0, 0.2, 1);
// Incoming
$ease-in:  cubic-bezier(0.0, 0.0, 0.2, 1);
// Exiting
$ease-out: cubic-bezier(0.4, 0.0, 1, 1);


//breakpoints mixin
@mixin breakpoint($point) {
  @if $point == desktop {
    @media (min-width: 1405px) { @content ; }
 }
  @else if $point == laptop {
    @media (min-width: 1100px) { @content ; }
 }
   @else if $point == tablet {
    @media (min-width: 980px) { @content ; }
 }
  @else if $point == phablet {
    @media (min-width: 767px)  { @content ; }
 }
 @else if $point == mobileonly {
    @media (max-width: 767px)  { @content ; }

 }
}
